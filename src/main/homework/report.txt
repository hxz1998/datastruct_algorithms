See the Assessment Guide for information on how to interpret this report.

ASSESSMENT SUMMARY

Compilation:  FAILED (0 errors, 3 warnings)
API:          PASSED

Spotbugs:     PASSED
PMD:          FAILED (3 warnings)
Checkstyle:   FAILED (0 errors, 1 warning)

Correctness:  29/43 tests passed
Memory:       101/114 tests passed
Timing:       130/193 tests passed

Aggregate score: 67.80%
[Compilation: 5%, API: 5%, Spotbugs: 0%, PMD: 0%, Checkstyle: 0%, Correctness: 60%, Memory: 10%, Timing: 20%]

ASSESSMENT DETAILS

The following files were submitted:
----------------------------------
4.9K Oct 11 04:50 Deque.java
 820 Oct 11 04:50 Permutation.java
4.1K Oct 11 04:50 RandomizedQueue.java


********************************************************************************
*  COMPILING
********************************************************************************


% javac11 Deque.java
*-----------------------------------------------------------
Deque.java:157: warning: [rawtypes] found raw type: Iterator
        Iterator iterator = deque1.iterator();
        ^
  missing type arguments for generic class Iterator<E>
  where E is a type-variable:
    E extends Object declared in interface Iterator
Deque.java:174: warning: [rawtypes] found raw type: Iterator
        Iterator iterator1 = deque3.iterator();
        ^
  missing type arguments for generic class Iterator<E>
  where E is a type-variable:
    E extends Object declared in interface Iterator
2 warnings

% javac11 RandomizedQueue.java
*-----------------------------------------------------------
RandomizedQueue.java:139: warning: [rawtypes] found raw type: Iterator
        Iterator iterator1 = queue1.iterator();
        ^
  missing type arguments for generic class Iterator<E>
  where E is a type-variable:
    E extends Object declared in interface Iterator
1 warning

% javac11 Permutation.java
*-----------------------------------------------------------


================================================================


Checking the APIs of your programs.
*-----------------------------------------------------------
Deque:

RandomizedQueue:

Permutation:

================================================================


********************************************************************************
*  CHECKING STYLE AND COMMON BUG PATTERNS
********************************************************************************


% spotbugs *.class
*-----------------------------------------------------------


================================================================


% pmd .
*-----------------------------------------------------------
RandomizedQueue.java:54: Avoid unused local variables, such as 'prev'. [UnusedLocalVariable]
RandomizedQueue.java:74: Avoid using assignment statements in expressions; this can make code harder to read. [AssignmentInOperand]
RandomizedQueue.java:89: Avoid using assignment statements in expressions; this can make code harder to read. [AssignmentInOperand]
PMD ends with 3 warnings.


================================================================


% checkstyle *.java
*-----------------------------------------------------------
[WARN] Permutation.java:4:3: '//' or '/*' is not followed by whitespace. [WhitespaceAfter]
Checkstyle ends with 0 errors and 1 warning.

% custom checkstyle checks for Deque.java
*-----------------------------------------------------------

% custom checkstyle checks for RandomizedQueue.java
*-----------------------------------------------------------
[INFO] RandomizedQueue.java:89: Using a loop in this method might be a performance bug. [Performance]

% custom checkstyle checks for Permutation.java
*-----------------------------------------------------------


================================================================


********************************************************************************
*  TESTING CORRECTNESS
********************************************************************************

Testing correctness of Deque
*-----------------------------------------------------------
Running 16 total tests.

Tests 1-6 make random calls to addFirst(), addLast(), removeFirst(),
removeLast(), isEmpty(), and size(). The probabilities of each
operation are (p1, p2, p3, p4, p5, p6), respectively.

Test 1: check random calls to addFirst(), addLast(), and size()
  *    5 random calls (0.4, 0.4, 0.0, 0.0, 0.0, 0.2)
  *   50 random calls (0.4, 0.4, 0.0, 0.0, 0.0, 0.2)
  *  500 random calls (0.4, 0.4, 0.0, 0.0, 0.0, 0.2)
  * 1000 random calls (0.4, 0.4, 0.0, 0.0, 0.0, 0.2)
==> passed

Test 2: check random calls to addFirst(), removeFirst(), and isEmpty()
  *    5 random calls (0.8, 0.0, 0.1, 0.0, 0.1, 0.0)
  *   50 random calls (0.8, 0.0, 0.1, 0.0, 0.1, 0.0)
  *  500 random calls (0.8, 0.0, 0.1, 0.0, 0.1, 0.0)
  * 1000 random calls (0.8, 0.0, 0.1, 0.0, 0.1, 0.0)
  *    5 random calls (0.1, 0.0, 0.8, 0.0, 0.1, 0.0)
  *   50 random calls (0.1, 0.0, 0.8, 0.0, 0.1, 0.0)
  *  500 random calls (0.1, 0.0, 0.8, 0.0, 0.1, 0.0)
  * 1000 random calls (0.1, 0.0, 0.8, 0.0, 0.1, 0.0)
==> passed

Test 3: check random calls to addFirst(), removeLast(), and isEmpty()
  *    5 random calls (0.8, 0.0, 0.0, 0.1, 0.1, 0.0)
  *   50 random calls (0.8, 0.0, 0.0, 0.1, 0.1, 0.0)
  *  500 random calls (0.8, 0.0, 0.0, 0.1, 0.1, 0.0)
  * 1000 random calls (0.8, 0.0, 0.0, 0.1, 0.1, 0.0)
  *    5 random calls (0.1, 0.0, 0.0, 0.8, 0.1, 0.0)
  *   50 random calls (0.1, 0.0, 0.0, 0.8, 0.1, 0.0)
  *  500 random calls (0.1, 0.0, 0.0, 0.8, 0.1, 0.0)
  * 1000 random calls (0.1, 0.0, 0.0, 0.8, 0.1, 0.0)
==> passed

Test 4: check random calls to addLast(), removeLast(), and isEmpty()
  *    5 random calls (0.0, 0.8, 0.0, 0.1, 0.1, 0.0)
  *   50 random calls (0.0, 0.8, 0.0, 0.1, 0.1, 0.0)
  *  500 random calls (0.0, 0.8, 0.0, 0.1, 0.1, 0.0)
  * 1000 random calls (0.0, 0.8, 0.0, 0.1, 0.1, 0.0)
  *    5 random calls (0.0, 0.1, 0.0, 0.8, 0.1, 0.0)
  *   50 random calls (0.0, 0.1, 0.0, 0.8, 0.1, 0.0)
  *  500 random calls (0.0, 0.1, 0.0, 0.8, 0.1, 0.0)
  * 1000 random calls (0.0, 0.1, 0.0, 0.8, 0.1, 0.0)
==> passed

Test 5: check random calls to addLast(), removeFirst(), and isEmpty()
  *    5 random calls (0.0, 0.8, 0.1, 0.0, 0.1, 0.0)
  *   50 random calls (0.0, 0.8, 0.1, 0.0, 0.1, 0.0)
  *  500 random calls (0.0, 0.8, 0.1, 0.0, 0.1, 0.0)
  * 1000 random calls (0.0, 0.8, 0.1, 0.0, 0.1, 0.0)
  *    5 random calls (0.0, 0.1, 0.8, 0.0, 0.1, 0.0)
  *   50 random calls (0.0, 0.1, 0.8, 0.0, 0.1, 0.0)
  *  500 random calls (0.0, 0.1, 0.8, 0.0, 0.1, 0.0)
  * 1000 random calls (0.0, 0.1, 0.8, 0.0, 0.1, 0.0)
==> passed

Test 6: check random calls to addFirst(), addLast(), removeFirst(),
        removeLast(), isEmpty(), and size()
  *    5 random calls (0.3, 0.3, 0.1, 0.1, 0.1, 0.1)
  *   50 random calls (0.3, 0.3, 0.1, 0.1, 0.1, 0.1)
  *  500 random calls (0.3, 0.3, 0.1, 0.1, 0.1, 0.1)
  * 1000 random calls (0.3, 0.3, 0.1, 0.1, 0.1, 0.1)
  *    5 random calls (0.1, 0.1, 0.3, 0.3, 0.1, 0.1)
  *   50 random calls (0.1, 0.1, 0.3, 0.3, 0.1, 0.1)
  *  500 random calls (0.1, 0.1, 0.3, 0.3, 0.1, 0.1)
  * 1000 random calls (0.1, 0.1, 0.3, 0.3, 0.1, 0.1)
==> passed

Test 7: check removeFirst() and removeLast() from an empty deque
  * removeFirst()
  * removeLast()
==> passed

Test 8: check whether two Deque objects can be created at the same time
  * n = 10
  * n = 1000
==> passed

Test 9: check iterator() after n calls to addFirst()
  * n = 10
  * n = 50
==> passed

Test 10: check iterator() after each of m intermixed calls to
         addFirst(), addLast(), removeFirst(), and removeLast()
  * m = 20
  * m = 50
  * m = 100
  * m = 1000
==> passed

Test 11: create two nested iterators to same deque
  * n = 10
  * n = 50
==> passed

Test 12: create two parallel iterators to same deque
==> passed

Test 13: create Deque objects of different parameterized types
==> passed

Test 14: call addFirst() and addLast() with null argument
==> passed

Test 15: check that remove() and next() throw the specified exceptions in iterator()
==> passed

Test 16: call iterator() when the deque is empty
==> passed


Total: 16/16 tests passed!


================================================================
Testing correctness of RandomizedQueue
*-----------------------------------------------------------
Running 18 total tests.

Tests 1-4 make random calls to enqueue(), dequeue(), sample(),
isEmpty(), and size(). The probabilities of each operation are
(p1, p2, p3, p4, p5), respectively.

Test 1: check random calls to enqueue() and size()
  *    5 random calls (0.8, 0.0, 0.0, 0.0, 0.2)
  *   50 random calls (0.8, 0.0, 0.0, 0.0, 0.2)
  *  500 random calls (0.8, 0.0, 0.0, 0.0, 0.2)
  * 1000 random calls (0.8, 0.0, 0.0, 0.0, 0.2)
==> passed

Test 2: check random calls to enqueue() and dequeue()
  *    5 random calls (0.7, 0.1, 0.0, 0.1, 0.1)
  *   50 random calls (0.7, 0.1, 0.0, 0.1, 0.1)

    java.lang.NullPointerException

    RandomizedQueue.dequeue(RandomizedQueue.java:67)
    TestRandomizedQueue.random(TestRandomizedQueue.java:115)
    TestRandomizedQueue.test2(TestRandomizedQueue.java:747)
    TestRandomizedQueue.main(TestRandomizedQueue.java:1191)

    - sequence of dequeue operations was:
         RandomizedQueue<Integer> rq = new RandomizedQueue<Integer>()
         rq.isEmpty()     ==> true
         rq.enqueue(3)
         rq.enqueue(5)
         rq.dequeue()     ==> 5
         rq.isEmpty()     ==> false
         rq.enqueue(27)
         rq.dequeue()     ==> 3
         rq.dequeue()

  *  500 random calls (0.7, 0.1, 0.0, 0.1, 0.1)

    java.lang.NullPointerException

    RandomizedQueue.dequeue(RandomizedQueue.java:77)
    TestRandomizedQueue.random(TestRandomizedQueue.java:115)
    TestRandomizedQueue.test2(TestRandomizedQueue.java:748)
    TestRandomizedQueue.main(TestRandomizedQueue.java:1191)

  * 1000 random calls (0.7, 0.1, 0.0, 0.1, 0.1)
  *    5 random calls (0.1, 0.7, 0.0, 0.1, 0.1)
  *   50 random calls (0.1, 0.7, 0.0, 0.1, 0.1)
  *  500 random calls (0.1, 0.7, 0.0, 0.1, 0.1)
    - failed on operation 20 of 500
    - dequeue() returned null

  * 1000 random calls (0.1, 0.7, 0.0, 0.1, 0.1)
    - failed on operation 109 of 1000
    - dequeue() returned null

==> FAILED

Test 3: check random calls to enqueue(), sample(), and size()
  *    5 random calls (0.8, 0.0, 0.1, 0.0, 0.1)
  *   50 random calls (0.8, 0.0, 0.1, 0.0, 0.1)
  *  500 random calls (0.8, 0.0, 0.1, 0.0, 0.1)
  * 1000 random calls (0.8, 0.0, 0.1, 0.0, 0.1)
  *    5 random calls (0.1, 0.0, 0.8, 0.0, 0.1)
  *   50 random calls (0.1, 0.0, 0.8, 0.0, 0.1)
  *  500 random calls (0.1, 0.0, 0.8, 0.0, 0.1)
  * 1000 random calls (0.1, 0.0, 0.8, 0.0, 0.1)
==> passed

Test 4: check random calls to enqueue(), dequeue(), sample(), isEmpty(), and size()
  *    5 random calls (0.6, 0.1, 0.1, 0.1, 0.1)
  *   50 random calls (0.6, 0.1, 0.1, 0.1, 0.1)
  *  500 random calls (0.6, 0.1, 0.1, 0.1, 0.1)

    java.lang.NullPointerException

    RandomizedQueue.sample(RandomizedQueue.java:90)
    TestRandomizedQueue.random(TestRandomizedQueue.java:152)
    TestRandomizedQueue.test4(TestRandomizedQueue.java:776)
    TestRandomizedQueue.main(TestRandomizedQueue.java:1197)

  * 1000 random calls (0.6, 0.1, 0.1, 0.1, 0.1)
  *    5 random calls (0.1, 0.6, 0.1, 0.1, 0.1)
  *   50 random calls (0.1, 0.6, 0.1, 0.1, 0.1)
    - failed on operation 46 of 50
    - dequeue() returned null

  *  500 random calls (0.1, 0.6, 0.1, 0.1, 0.1)
    - failed on operation 60 of 500
    - dequeue() returned null

  * 1000 random calls (0.1, 0.6, 0.1, 0.1, 0.1)
    - failed on operation 7 of 1000
    - dequeue() returned null

    - sequence of randomized queue operations was:
         RandomizedQueue<Integer> rq = new RandomizedQueue<Integer>()
         rq.enqueue(982)
         rq.size()        ==> 1
         rq.enqueue(892)
         rq.dequeue()     ==> 892
         rq.dequeue()     ==> 982
         rq.enqueue(973)
         rq.dequeue()     ==> null
==> FAILED

Test 5: call dequeue() and sample() from an empty randomized queue
  * dequeue()
  * sample()
==> passed

Test 6: create multiple randomized queue objects at the same time
  * n = 10
  * n = 100
==> passed

Test 7: check that iterator() returns correct items after a sequence
        of n enqueue() operations
  * n = 10
  * n = 50
==> passed

Test 8: check that iterator() returns correct items after sequence
        of m enqueue() and dequeue() operations
  * m = 10

    java.lang.NullPointerException

    RandomizedQueue.dequeue(RandomizedQueue.java:58)
    TestRandomizedQueue.checkIteratorAfterEnqueueDequeue(TestRandomizedQueue.java:891)
    TestRandomizedQueue.test8(TestRandomizedQueue.java:921)
    TestRandomizedQueue.main(TestRandomizedQueue.java:1209)

  * m = 1000

    java.lang.NullPointerException

    RandomizedQueue.dequeue(RandomizedQueue.java:58)
    TestRandomizedQueue.checkIteratorAfterEnqueueDequeue(TestRandomizedQueue.java:891)
    TestRandomizedQueue.test8(TestRandomizedQueue.java:922)
    TestRandomizedQueue.main(TestRandomizedQueue.java:1209)

==> FAILED

Test 9: create two nested iterators over the same randomized queue
  * n = 10
    - inner iterator returned fewer than 10 items

  * n = 50
    - inner iterator returned fewer than 50 items

==> FAILED

Test 10: create two parallel iterators over the same randomized queue
  * n = 10
    - student   iterator 1 hasNext() = false
    - student   iterator 2 hasNext() = false
    - reference iterator   hasNext() = true

  * n = 50
    - student   iterator 1 hasNext() = false
    - student   iterator 2 hasNext() = false
    - reference iterator   hasNext() = true

==> FAILED

Test 11: create two iterators over different randomized queues
==> passed

Test 12: create RandomizedQueue objects of different parameterized types
==> passed

Test 13: check randomness of sample() by enqueueing n items, repeatedly calling
         sample(), and counting the frequency of each item
  * n = 3, trials = 12000
  * n = 5, trials = 12000
  * n = 8, trials = 12000
  * n = 10, trials = 12000
==> passed

Test 14: check randomness of dequeue() by enqueueing n items, dequeueing n items,
         and seeing whether each of the n! permutations is equally likely
  * n = 2, trials = 12000
  * n = 3, trials = 12000
  * n = 4, trials = 12000
  * n = 5, trials = 12000
==> passed

Test 15: check randomness of iterator() by enqueueing n items, iterating over those
         n items, and seeing whether each of the n! permutations is equally likely
  * n = 2, trials = 12000
  * n = 3, trials = 12000
  * n = 4, trials = 12000
  * n = 5, trials = 12000
==> passed

Test 16: call enqueue() with a null argument
==> passed

Test 17: check that remove() and next() throw the specified exceptions in iterator()
==> passed

Test 18: call iterator() when randomized queue is empty
==> passed


Total: 13/18 tests passed!


================================================================
********************************************************************************
*  TESTING CORRECTNESS (substituting reference RandomizedQueue and Deque)
********************************************************************************

Testing correctness of Permutation
*-----------------------------------------------------------
Tests 1-5 call the main() function directly, resetting standard input
before each call.

Running 9 total tests.

Test 1a: check formatting for sample inputs from assignment specification
  % java Permutation 3 < distinct.txt


    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    TestPermutation.checkFormatting(TestPermutation.java:40)
    TestPermutation.test1a(TestPermutation.java:206)
    TestPermutation.main(TestPermutation.java:316)

  - student solution threw an exception
  - reference solution did not throw an exception

  % java Permutation 3 < distinct.txt


    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    TestPermutation.checkFormatting(TestPermutation.java:40)
    TestPermutation.test1a(TestPermutation.java:207)
    TestPermutation.main(TestPermutation.java:316)

  - student solution threw an exception
  - reference solution did not throw an exception

  % java Permutation 8 < duplicates.txt


    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    TestPermutation.checkFormatting(TestPermutation.java:40)
    TestPermutation.test1a(TestPermutation.java:208)
    TestPermutation.main(TestPermutation.java:316)

  - student solution threw an exception
  - reference solution did not throw an exception

==> FAILED

Test 1b: check formatting for other inputs
  % java Permutation 8 < mediumTale.txt


    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    TestPermutation.checkFormatting(TestPermutation.java:40)
    TestPermutation.test1b(TestPermutation.java:214)
    TestPermutation.main(TestPermutation.java:319)

  - student solution threw an exception
  - reference solution did not throw an exception

  % java Permutation 0 < distinct.txt


    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    TestPermutation.checkFormatting(TestPermutation.java:40)
    TestPermutation.test1b(TestPermutation.java:215)
    TestPermutation.main(TestPermutation.java:319)

  - student solution threw an exception
  - reference solution did not throw an exception

==> FAILED

Test 2: check that main() reads all data from standard input
  * filename = distinct.txt, k = 3

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    UtilCOS.consumesStdIn(UtilCOS.java:189)
    TestPermutation.checkConsumesStdIn(TestPermutation.java:52)
    TestPermutation.test2(TestPermutation.java:221)
    TestPermutation.main(TestPermutation.java:322)

  * filename = distinct.txt, k = 3

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    UtilCOS.consumesStdIn(UtilCOS.java:189)
    TestPermutation.checkConsumesStdIn(TestPermutation.java:52)
    TestPermutation.test2(TestPermutation.java:222)
    TestPermutation.main(TestPermutation.java:322)

  * filename = duplicates.txt, k = 8

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    UtilCOS.consumesStdIn(UtilCOS.java:189)
    TestPermutation.checkConsumesStdIn(TestPermutation.java:52)
    TestPermutation.test2(TestPermutation.java:223)
    TestPermutation.main(TestPermutation.java:322)

  * filename = mediumTale.txt, k = 8

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    UtilCOS.consumesStdIn(UtilCOS.java:189)
    TestPermutation.checkConsumesStdIn(TestPermutation.java:52)
    TestPermutation.test2(TestPermutation.java:224)
    TestPermutation.main(TestPermutation.java:322)

==> FAILED

Test 3a: check that main() prints each item from the sequence at most once
         (for inputs with no duplicate strings)
  * filename = distinct.txt, k = 3

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3a(TestPermutation.java:232)
    TestPermutation.main(TestPermutation.java:325)

  * filename = distinct.txt, k = 1

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3a(TestPermutation.java:233)
    TestPermutation.main(TestPermutation.java:325)

  * filename = distinct.txt, k = 9

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3a(TestPermutation.java:234)
    TestPermutation.main(TestPermutation.java:325)

  * filename = permutation6.txt, k = 6

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3a(TestPermutation.java:235)
    TestPermutation.main(TestPermutation.java:325)

  * filename = permutation10.txt, k = 10

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3a(TestPermutation.java:236)
    TestPermutation.main(TestPermutation.java:325)

==> FAILED

Test 3b: check that main() prints each item from the sequence at most once
         (for inputs with duplicate strings)
  * filename = duplicates.txt, k = 8

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3b(TestPermutation.java:244)
    TestPermutation.main(TestPermutation.java:328)

  * filename = duplicates.txt, k = 3

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3b(TestPermutation.java:245)
    TestPermutation.main(TestPermutation.java:328)

  * filename = permutation8.txt, k = 6

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3b(TestPermutation.java:246)
    TestPermutation.main(TestPermutation.java:328)

  * filename = permutation8.txt, k = 2

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3b(TestPermutation.java:247)
    TestPermutation.main(TestPermutation.java:328)

  * filename = tinyTale.txt, k = 10

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3b(TestPermutation.java:248)
    TestPermutation.main(TestPermutation.java:328)

==> FAILED

Test 3c: check that main() prints each item from the sequence at most once
         (for inputs with newlines)
  * filename = mediumTale.txt, k = 10

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3c(TestPermutation.java:256)
    TestPermutation.main(TestPermutation.java:331)

  * filename = mediumTale.txt, k = 20

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3c(TestPermutation.java:257)
    TestPermutation.main(TestPermutation.java:331)

  * filename = tale.txt, k = 10

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3c(TestPermutation.java:259)
    TestPermutation.main(TestPermutation.java:331)

  * filename = tale.txt, k = 50

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test3c(TestPermutation.java:260)
    TestPermutation.main(TestPermutation.java:331)

==> FAILED

Test 4: check main() when k = 0
  * filename = distinct.txt, k = 0

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test4(TestPermutation.java:267)
    TestPermutation.main(TestPermutation.java:334)

  * filename = distinct.txt, k = 0

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkStringFrequencies(TestPermutation.java:74)
    TestPermutation.test4(TestPermutation.java:268)
    TestPermutation.main(TestPermutation.java:334)

==> FAILED

Test 5a: check that permutations are uniformly random
         (for inputs with no duplicate strings)
  * filename = permutation4.txt, k = 1

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5a(TestPermutation.java:278)
    TestPermutation.main(TestPermutation.java:337)

  * filename = permutation4.txt, k = 2

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5a(TestPermutation.java:279)
    TestPermutation.main(TestPermutation.java:337)

  * filename = permutation4.txt, k = 3

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5a(TestPermutation.java:280)
    TestPermutation.main(TestPermutation.java:337)

  * filename = permutation4.txt, k = 4

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5a(TestPermutation.java:281)
    TestPermutation.main(TestPermutation.java:337)

  * filename = permutation6.txt, k = 2

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5a(TestPermutation.java:282)
    TestPermutation.main(TestPermutation.java:337)

==> FAILED

Test 5b: check that permutations are uniformly random
         (for inputs with duplicate strings)
  * filename = permutation5.txt, k = 1

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5b(TestPermutation.java:290)
    TestPermutation.main(TestPermutation.java:340)

  * filename = permutation5.txt, k = 2

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5b(TestPermutation.java:291)
    TestPermutation.main(TestPermutation.java:340)

  * filename = permutation5.txt, k = 3

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5b(TestPermutation.java:292)
    TestPermutation.main(TestPermutation.java:340)

  * filename = duplicates.txt, k = 3

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5b(TestPermutation.java:293)
    TestPermutation.main(TestPermutation.java:340)

  * filename = permutation8.txt, k = 2

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TestPermutation.checkRandomnessOfPermutation(TestPermutation.java:161)
    TestPermutation.test5b(TestPermutation.java:294)
    TestPermutation.main(TestPermutation.java:340)

==> FAILED

Total: 0/9 tests passed!


================================================================
********************************************************************************
*  TIMING (substituting reference RandomizedQueue and Deque)
********************************************************************************

Timing Permutation
*-----------------------------------------------------------
Running 23 total tests.

Test 1: count calls to methods in StdIn
  * java Permutation 5 < distinct.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdIn(TimePermutation.java:61)
    TimePermutation.test1(TimePermutation.java:303)
    TimePermutation.main(TimePermutation.java:358)

  * java Permutation 10 < permutation10.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdIn(TimePermutation.java:61)
    TimePermutation.test1(TimePermutation.java:304)
    TimePermutation.main(TimePermutation.java:358)

  * java Permutation 1 < mediumTale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdIn(TimePermutation.java:61)
    TimePermutation.test1(TimePermutation.java:305)
    TimePermutation.main(TimePermutation.java:358)

  * java Permutation 20 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdIn(TimePermutation.java:61)
    TimePermutation.test1(TimePermutation.java:306)
    TimePermutation.main(TimePermutation.java:358)

  * java Permutation 100 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdIn(TimePermutation.java:61)
    TimePermutation.test1(TimePermutation.java:307)
    TimePermutation.main(TimePermutation.java:358)

  * java Permutation 16412 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdIn(TimePermutation.java:61)
    TimePermutation.test1(TimePermutation.java:308)
    TimePermutation.main(TimePermutation.java:358)

==> FAILED

Test 2: count calls to methods in Deque and RandomizedQueue
  * java Permutation 5 < distinct.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToDequeAndRandomizedQueue(TimePermutation.java:140)
    TimePermutation.test2(TimePermutation.java:314)
    TimePermutation.main(TimePermutation.java:361)

  * java Permutation 10 < permutation10.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToDequeAndRandomizedQueue(TimePermutation.java:140)
    TimePermutation.test2(TimePermutation.java:315)
    TimePermutation.main(TimePermutation.java:361)

  * java Permutation 1 < mediumTale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToDequeAndRandomizedQueue(TimePermutation.java:140)
    TimePermutation.test2(TimePermutation.java:316)
    TimePermutation.main(TimePermutation.java:361)

  * java Permutation 20 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToDequeAndRandomizedQueue(TimePermutation.java:140)
    TimePermutation.test2(TimePermutation.java:317)
    TimePermutation.main(TimePermutation.java:361)

  * java Permutation 100 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToDequeAndRandomizedQueue(TimePermutation.java:140)
    TimePermutation.test2(TimePermutation.java:318)
    TimePermutation.main(TimePermutation.java:361)

  * java Permutation 16412 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToDequeAndRandomizedQueue(TimePermutation.java:140)
    TimePermutation.test2(TimePermutation.java:319)
    TimePermutation.main(TimePermutation.java:361)

==> FAILED

Test 3: count calls to methods in StdRandom
  * java Permutation 5 < distinct.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdRandom(TimePermutation.java:225)
    TimePermutation.test3(TimePermutation.java:325)
    TimePermutation.main(TimePermutation.java:364)

  * java Permutation 10 < permutation10.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdRandom(TimePermutation.java:225)
    TimePermutation.test3(TimePermutation.java:326)
    TimePermutation.main(TimePermutation.java:364)

  * java Permutation 1 < mediumTale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdRandom(TimePermutation.java:225)
    TimePermutation.test3(TimePermutation.java:327)
    TimePermutation.main(TimePermutation.java:364)

  * java Permutation 20 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdRandom(TimePermutation.java:225)
    TimePermutation.test3(TimePermutation.java:328)
    TimePermutation.main(TimePermutation.java:364)

  * java Permutation 100 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdRandom(TimePermutation.java:225)
    TimePermutation.test3(TimePermutation.java:329)
    TimePermutation.main(TimePermutation.java:364)

  * java Permutation 16412 < tale.txt

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.countCallsToStdRandom(TimePermutation.java:225)
    TimePermutation.test3(TimePermutation.java:330)
    TimePermutation.main(TimePermutation.java:364)

==> FAILED

Test 4: Time main() with k = 5, for inputs containing n random strings

                    n  seconds
------------------------------

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.timeMain(TimePermutation.java:265)
    TimePermutation.checkRunningTimeOfMain(TimePermutation.java:284)
    TimePermutation.test4(TimePermutation.java:336)
    TimePermutation.main(TimePermutation.java:367)

=> FAILED        1000 Infinity
   [ Most likely main() takes more than linear time. ]
==> 0/10 tests passed


Test 5: Time main() with k = 1000, for inputs containing n random strings

                    n  seconds
------------------------------

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    UtilCOS.execute(UtilCOS.java:159)
    UtilCOS.execute(UtilCOS.java:146)
    TimePermutation.timeMain(TimePermutation.java:265)
    TimePermutation.checkRunningTimeOfMain(TimePermutation.java:284)
    TimePermutation.test5(TimePermutation.java:341)
    TimePermutation.main(TimePermutation.java:370)

=> FAILED        1000 Infinity
   [ Most likely main() takes more than linear time. ]
==> 0/10 tests passed


Total: 0/23 tests passed!


================================================================



********************************************************************************
*  MEMORY
********************************************************************************

Analyzing memory of Permutation
*-----------------------------------------------------------
Running 2 total tests.

Test 1: check that only one Deque or RandomizedQueue object is created
  * filename = distinct.txt, n = 9, k = 1

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkNumberOfObjects(MemoryOfPermutation.java:27)
    MemoryOfPermutation.test1(MemoryOfPermutation.java:157)
    MemoryOfPermutation.main(MemoryOfPermutation.java:198)

  * filename = distinct.txt, n = 9, k = 2

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkNumberOfObjects(MemoryOfPermutation.java:27)
    MemoryOfPermutation.test1(MemoryOfPermutation.java:158)
    MemoryOfPermutation.main(MemoryOfPermutation.java:198)

  * filename = distinct.txt, n = 9, k = 4

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkNumberOfObjects(MemoryOfPermutation.java:27)
    MemoryOfPermutation.test1(MemoryOfPermutation.java:159)
    MemoryOfPermutation.main(MemoryOfPermutation.java:198)

  * filename = tinyTale.txt, n = 12, k = 10

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkNumberOfObjects(MemoryOfPermutation.java:27)
    MemoryOfPermutation.test1(MemoryOfPermutation.java:160)
    MemoryOfPermutation.main(MemoryOfPermutation.java:198)

  * filename = tale.txt, n = 138653, k = 50

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkNumberOfObjects(MemoryOfPermutation.java:27)
    MemoryOfPermutation.test1(MemoryOfPermutation.java:161)
    MemoryOfPermutation.main(MemoryOfPermutation.java:198)

==> FAILED

Test 2: check that the maximum size of any Deque or RandomizedQueue object
        created is between k and n
  * filename = distinct.txt, n = 9, k = 1

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:168)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = distinct.txt, n = 9, k = 2

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:169)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = distinct.txt, n = 9, k = 4

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:170)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = tinyTale.txt, n = 12, k = 10

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:171)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = tale.txt, n = 138653, k = 5

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:172)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = tale.txt, n = 138653, k = 50

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:173)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = tale.txt, n = 138653, k = 500

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:174)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = tale.txt, n = 138653, k = 5000

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:175)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

  * filename = tale.txt, n = 138653, k = 50000

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSize(MemoryOfPermutation.java:63)
    MemoryOfPermutation.test2(MemoryOfPermutation.java:176)
    MemoryOfPermutation.main(MemoryOfPermutation.java:199)

==> FAILED

Test 3 (bonus): check that maximum size of any or Deque or RandomizedQueue object
                created is equal to k
  * filename = tale.txt, n = 138653, k = 5

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSizeBonus(MemoryOfPermutation.java:116)
    MemoryOfPermutation.test3(MemoryOfPermutation.java:184)
    MemoryOfPermutation.main(MemoryOfPermutation.java:200)

  * filename = tale.txt, n = 138653, k = 50

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSizeBonus(MemoryOfPermutation.java:116)
    MemoryOfPermutation.test3(MemoryOfPermutation.java:185)
    MemoryOfPermutation.main(MemoryOfPermutation.java:200)

  * filename = tale.txt, n = 138653, k = 500

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSizeBonus(MemoryOfPermutation.java:116)
    MemoryOfPermutation.test3(MemoryOfPermutation.java:186)
    MemoryOfPermutation.main(MemoryOfPermutation.java:200)

  * filename = tale.txt, n = 138653, k = 5000

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSizeBonus(MemoryOfPermutation.java:116)
    MemoryOfPermutation.test3(MemoryOfPermutation.java:187)
    MemoryOfPermutation.main(MemoryOfPermutation.java:200)

  * filename = tale.txt, n = 138653, k = 50000

    java.util.NoSuchElementException: attempts to read a 'String' value from standard input, but there are no more tokens available

    edu.princeton.cs.algs4.StdIn.readString(StdIn.java:263)
    Permutation.main(Permutation.java:15)
    MemoryOfPermutation.checkMaxSizeBonus(MemoryOfPermutation.java:116)
    MemoryOfPermutation.test3(MemoryOfPermutation.java:188)
    MemoryOfPermutation.main(MemoryOfPermutation.java:200)

==> FAILED

Total: 0/2 tests passed!


================================================================



********************************************************************************
*  MEMORY
********************************************************************************

Analyzing memory of Deque
*-----------------------------------------------------------
For tests 1-4, the maximum amount of memory allowed for a Deque
containing n items is 48n + 192.

Running 48 total tests.

Test 1a-1i: total memory usage after inserting n items,
            where n is a power of 2

                 n        bytes
----------------------------------------------------------
=> passed       32         1576
=> passed       64         3112
=> passed      128         6184
=> passed      256        12328
=> passed      512        24616
=> passed     1024        49192
=> passed     2048        98344
=> passed     4096       196648
=> passed     8192       393256
==> 9/9 tests passed

Memory: 48.00 n + 40.00   (R^2 = 1.000)


Test 2a-2i: Total memory usage after inserting n items,
            when n is one more than a power of 2.

                 n        bytes
----------------------------------------------------------
=> passed       33         1624
=> passed       65         3160
=> passed      129         6232
=> passed      257        12376
=> passed      513        24664
=> passed     1025        49240
=> passed     2049        98392
=> passed     4097       196696
=> passed     8193       393304

...

WARNING: the grading output was truncated due to excessive length.
Typically, this is because you have a method that has an unanticipated side effect
(such as printing to standard output or throwing an exception). A large amount of output
can also arise from failing many tests.